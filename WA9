install.packages("tidyverse")
install.packages("readr")
if (!requireNamespace("BiocManager", quietly = TRUE)) install.packages("BiocManager")
BiocManager::install("DESeq2")
These three commands installed tidyverse, readr and BiocManager
library(tidyverse)
library(readr)
library(DESeq2)
These three commands accessed the libraries that the previous commands installed
mycounts <- read_csv("data/WA_counts.csv") 
metadata <- read_csv("data/WA8_Metadata.csv")
anno <- read_csv("data/annotables_grch38.csv")
These three commands imported the necessary data into R Studio
mycounts <- as.data.frame(mycounts)
metadata <- as.data.frame(metadata)
names(mycounts)[-1]
metadata$id
names(mycounts)[-1]==metadata$id
all(names(mycounts)[-1]==metadata$id)
mycounts <- as.data.frame(mycounts)
metadata <- as.data.frame(metadata)
names(mycounts)[-1]
metadata$id
names(mycounts)[-1]==metadata$id
all(names(mycounts)[-1]==metadata$id)
This set of commands checks that the column names of our count data are the same as the IDs from our colData
dds.data <- DESeqDataSetFromMatrix(countData=mycounts, 
                                   colData=metadata, 
                                   design=~dex, 
                                   tidy=TRUE)
dds
This set of commands creates a DESeq object
dds <-DESeq(dds.data)
This command runs DESeq
res <- results(dds, tidy=TRUE)
res <- tbl_df(res)
res
This set of commands gathers the results into a res file
res2 <- arrange(res, padj)
This command works with the res file
res3 <- filter(res2, padj<=0.05 & log2FoldChange>=2)
res4 <- filter(res2, padj<=0.05 & log2FoldChange<=-2)
These commands allow for the calculation of the amount of significantly different genes
plotCounts(dds, gene="Solyc11g028040.1.1", intgroup="dex")
This command plots the expression of a particular gene as a volcano plot
plotCounts(dds, gene="Solyc11g028040.1.1", intgroup="dex", returnData=TRUE) %>%
  ggplot(aes(dex,count))+
  geom_boxplot(aes(fill=dex))+
  scale_y_log10() + 
  ggtitle("INSERT GENE NAME") 
These commands produce a box plot of the differently expressed genes
res_sig=mutate(res,significance=ifelse(padj<0.05,"Significant","Non-significant"))
This command adds a column to the table to indicate significance
ggplot(res_sig) +
  geom_point(aes(x=log2FoldChange, y=-log10(padj), colour=significance))
ggplot(res_sig) +
  geom_point(aes(x=log2FoldChange, y=-log10(padj), colour=significance)) +
  ggtitle("Mov10 overexpression") +
  xlab("log2 fold change") + 
  ylab("-log10 adjusted p-value") +
  #scale_y_continuous(limits = c(0,50)) +
  theme(legend.position = "none",
        plot.title = element_text(size = rel(1.5), hjust = 0.5),
        axis.title = element_text(size = rel(1.25)))  +
  theme_bw()
These commands make a basic XY scatter plot with Log2FoldChange as the x-axis and adjusted p-value as the y-axis using ggplot
